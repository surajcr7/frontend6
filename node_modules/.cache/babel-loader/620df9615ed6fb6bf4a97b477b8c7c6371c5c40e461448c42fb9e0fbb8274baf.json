{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97798\\\\Desktop\\\\ecommerce-multivendor-frontend-master\\\\src\\\\CartComponent\\\\ViewMyCart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewMyCart = () => {\n  _s();\n  const user = JSON.parse(sessionStorage.getItem(\"active-customer\"));\n  const customer_jwtToken = sessionStorage.getItem(\"customer-jwtToken\");\n  const [carts, setCarts] = useState([]);\n  const [cartAmount, setCartAmount] = useState(\"0.0\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getAllCart = async () => {\n      try {\n        const response = await retrieveCart();\n        if (response.success) {\n          setCarts(response.data.carts);\n          setCartAmount(response.data.totalCartAmount || \"0.0\");\n        } else {\n          handleApiError(response);\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error(\"It seems the server is down\", {\n          position: \"top-center\"\n        });\n      }\n    };\n    getAllCart();\n  }, []);\n  const retrieveCart = async () => {\n    const response = await axios.get(`http://localhost:8080/api/cart/fetch?userId=${user.id}`, {\n      headers: {\n        Authorization: `Bearer ${customer_jwtToken}`\n      }\n    });\n    console.log(response.data);\n    return response.data;\n  };\n  const updateCart = (cart, quantity) => {\n    const data = {\n      id: cart.id,\n      userId: user.id,\n      quantity\n    };\n    fetch(\"http://localhost:8080/api/cart/update\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${customer_jwtToken}`\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.json()).then(res => {\n      if (res.success) {\n        toast.success(res.responseMessage, {\n          position: \"top-center\"\n        });\n        setTimeout(() => {\n          window.location.reload(true);\n        }, 1000);\n      } else {\n        handleApiError(res);\n      }\n    }).catch(error => {\n      console.error(error);\n      toast.error(\"It seems the server is down\", {\n        position: \"top-center\"\n      });\n      setTimeout(() => {\n        window.location.reload(true);\n      }, 1000);\n    });\n  };\n  const deleteCart = cartId => {\n    const data = {\n      id: cartId,\n      userId: user.id\n    };\n    fetch(\"http://localhost:8080/api/cart/delete\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${customer_jwtToken}`\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.json()).then(res => {\n      if (res.success) {\n        toast.success(res.responseMessage, {\n          position: \"top-center\"\n        });\n        setTimeout(() => {\n          window.location.reload(true);\n        }, 1000);\n      } else {\n        handleApiError(res);\n      }\n    }).catch(error => {\n      console.error(error);\n      toast.error(\"It seems the server is down\", {\n        position: \"top-center\"\n      });\n      setTimeout(() => {\n        window.location.reload(true);\n      }, 1000);\n    });\n  };\n  const handleApiError = response => {\n    toast.error(response.responseMessage, {\n      position: \"top-center\"\n    });\n    setTimeout(() => {\n      window.location.reload(true);\n    }, 1000);\n  };\n  const checkout = e => {\n    e.preventDefault();\n    if (!carts || carts.length < 1) {\n      toast.error(\"No Products In Cart To Order!!!\", {\n        position: \"top-center\"\n      });\n      return;\n    }\n    navigate(\"/customer/order/payment\", {\n      state: {\n        priceToPay: cartAmount\n      }\n    });\n  };\n  const incrementCart = cart => {\n    updateCart(cart, cart.quantity + 1);\n  };\n  const decrementCart = cart => {\n    if (cart.quantity > 1) {\n      updateCart(cart, cart.quantity - 1);\n    } else {\n      // Optionally show a message that the quantity cannot be less than 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewMyCart, \"ATWBCiDOgxSZJHnKM09moKJJvdU=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewMyCart;\nexport default ViewMyCart;\nvar _c;\n$RefreshReg$(_c, \"ViewMyCart\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","toast","jsxDEV","_jsxDEV","ViewMyCart","_s","user","JSON","parse","sessionStorage","getItem","customer_jwtToken","carts","setCarts","cartAmount","setCartAmount","navigate","getAllCart","response","retrieveCart","success","data","totalCartAmount","handleApiError","error","console","position","get","id","headers","Authorization","log","updateCart","cart","quantity","userId","fetch","method","Accept","body","stringify","then","result","json","res","responseMessage","setTimeout","window","location","reload","catch","deleteCart","cartId","checkout","e","preventDefault","length","state","priceToPay","incrementCart","decrementCart","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/97798/Desktop/ecommerce-multivendor-frontend-master/src/CartComponent/ViewMyCart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst ViewMyCart = () => {\n  const user = JSON.parse(sessionStorage.getItem(\"active-customer\"));\n  const customer_jwtToken = sessionStorage.getItem(\"customer-jwtToken\");\n  const [carts, setCarts] = useState([]);\n  const [cartAmount, setCartAmount] = useState(\"0.0\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getAllCart = async () => {\n      try {\n        const response = await retrieveCart();\n        if (response.success) {\n          setCarts(response.data.carts);\n          setCartAmount(response.data.totalCartAmount || \"0.0\");\n        } else {\n          handleApiError(response);\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error(\"It seems the server is down\", { position: \"top-center\" });\n      }\n    };\n\n    getAllCart();\n  }, []);\n\n  const retrieveCart = async () => {\n    const response = await axios.get(\n      `http://localhost:8080/api/cart/fetch?userId=${user.id}`,\n      {\n        headers: {\n          Authorization: `Bearer ${customer_jwtToken}`,\n        },\n      }\n    );\n    console.log(response.data);\n    return response.data;\n  };\n\n  const updateCart = (cart, quantity) => {\n    const data = { id: cart.id, userId: user.id, quantity };\n    fetch(\"http://localhost:8080/api/cart/update\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${customer_jwtToken}`,\n      },\n      body: JSON.stringify(data),\n    })\n      .then((result) => result.json())\n      .then((res) => {\n        if (res.success) {\n          toast.success(res.responseMessage, { position: \"top-center\" });\n          setTimeout(() => {\n            window.location.reload(true);\n          }, 1000);\n        } else {\n          handleApiError(res);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        toast.error(\"It seems the server is down\", { position: \"top-center\" });\n        setTimeout(() => {\n          window.location.reload(true);\n        }, 1000);\n      });\n  };\n\n  const deleteCart = (cartId) => {\n    const data = { id: cartId, userId: user.id };\n    fetch(\"http://localhost:8080/api/cart/delete\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${customer_jwtToken}`,\n      },\n      body: JSON.stringify(data),\n    })\n      .then((result) => result.json())\n      .then((res) => {\n        if (res.success) {\n          toast.success(res.responseMessage, { position: \"top-center\" });\n          setTimeout(() => {\n            window.location.reload(true);\n          }, 1000);\n        } else {\n          handleApiError(res);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        toast.error(\"It seems the server is down\", { position: \"top-center\" });\n        setTimeout(() => {\n          window.location.reload(true);\n        }, 1000);\n      });\n  };\n\n  const handleApiError = (response) => {\n    toast.error(response.responseMessage, { position: \"top-center\" });\n    setTimeout(() => {\n      window.location.reload(true);\n    }, 1000);\n  };\n\n  const checkout = (e) => {\n    e.preventDefault();\n    if (!carts || carts.length < 1) {\n      toast.error(\"No Products In Cart To Order!!!\", { position: \"top-center\" });\n      return;\n    }\n    navigate(\"/customer/order/payment\", { state: { priceToPay: cartAmount } });\n  };\n\n  const incrementCart = (cart) => {\n    updateCart(cart, cart.quantity + 1);\n  };\n\n  const decrementCart = (cart) => {\n    if (cart.quantity > 1) {\n      updateCart(cart, cart.quantity - 1);\n    } else {\n      // Optionally show a message that the quantity cannot be less than 1\n    }\n  };\n\n  return (\n    <div className=\"mt-3\">\n      {/* Rest of your component code */}\n    </div>\n  );\n};\n\nexport default ViewMyCart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;EAClE,MAAMC,iBAAiB,GAAGF,cAAc,CAACC,OAAO,CAAC,mBAAmB,CAAC;EACrE,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMmB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAAC,CAAC;QACrC,IAAID,QAAQ,CAACE,OAAO,EAAE;UACpBP,QAAQ,CAACK,QAAQ,CAACG,IAAI,CAACT,KAAK,CAAC;UAC7BG,aAAa,CAACG,QAAQ,CAACG,IAAI,CAACC,eAAe,IAAI,KAAK,CAAC;QACvD,CAAC,MAAM;UACLC,cAAc,CAACL,QAAQ,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBvB,KAAK,CAACuB,KAAK,CAAC,6BAA6B,EAAE;UAAEE,QAAQ,EAAE;QAAa,CAAC,CAAC;MACxE;IACF,CAAC;IAEDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMD,QAAQ,GAAG,MAAMnB,KAAK,CAAC4B,GAAG,CAC7B,+CAA8CrB,IAAI,CAACsB,EAAG,EAAC,EACxD;MACEC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASnB,iBAAkB;MAC7C;IACF,CACF,CAAC;IACDc,OAAO,CAACM,GAAG,CAACb,QAAQ,CAACG,IAAI,CAAC;IAC1B,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED,MAAMW,UAAU,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACrC,MAAMb,IAAI,GAAG;MAAEO,EAAE,EAAEK,IAAI,CAACL,EAAE;MAAEO,MAAM,EAAE7B,IAAI,CAACsB,EAAE;MAAEM;IAAS,CAAC;IACvDE,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,KAAK;MACbR,OAAO,EAAE;QACPS,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE,kBAAkB;QAClCR,aAAa,EAAG,UAASnB,iBAAkB;MAC7C,CAAC;MACD4B,IAAI,EAAEhC,IAAI,CAACiC,SAAS,CAACnB,IAAI;IAC3B,CAAC,CAAC,CACCoB,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAAEG,GAAG,IAAK;MACb,IAAIA,GAAG,CAACxB,OAAO,EAAE;QACfnB,KAAK,CAACmB,OAAO,CAACwB,GAAG,CAACC,eAAe,EAAE;UAAEnB,QAAQ,EAAE;QAAa,CAAC,CAAC;QAC9DoB,UAAU,CAAC,MAAM;UACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACL1B,cAAc,CAACqB,GAAG,CAAC;MACrB;IACF,CAAC,CAAC,CACDM,KAAK,CAAE1B,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBvB,KAAK,CAACuB,KAAK,CAAC,6BAA6B,EAAE;QAAEE,QAAQ,EAAE;MAAa,CAAC,CAAC;MACtEoB,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;MAC9B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAME,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAM/B,IAAI,GAAG;MAAEO,EAAE,EAAEwB,MAAM;MAAEjB,MAAM,EAAE7B,IAAI,CAACsB;IAAG,CAAC;IAC5CQ,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,QAAQ;MAChBR,OAAO,EAAE;QACPS,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE,kBAAkB;QAClCR,aAAa,EAAG,UAASnB,iBAAkB;MAC7C,CAAC;MACD4B,IAAI,EAAEhC,IAAI,CAACiC,SAAS,CAACnB,IAAI;IAC3B,CAAC,CAAC,CACCoB,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAAEG,GAAG,IAAK;MACb,IAAIA,GAAG,CAACxB,OAAO,EAAE;QACfnB,KAAK,CAACmB,OAAO,CAACwB,GAAG,CAACC,eAAe,EAAE;UAAEnB,QAAQ,EAAE;QAAa,CAAC,CAAC;QAC9DoB,UAAU,CAAC,MAAM;UACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACL1B,cAAc,CAACqB,GAAG,CAAC;MACrB;IACF,CAAC,CAAC,CACDM,KAAK,CAAE1B,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBvB,KAAK,CAACuB,KAAK,CAAC,6BAA6B,EAAE;QAAEE,QAAQ,EAAE;MAAa,CAAC,CAAC;MACtEoB,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;MAC9B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAM1B,cAAc,GAAIL,QAAQ,IAAK;IACnCjB,KAAK,CAACuB,KAAK,CAACN,QAAQ,CAAC2B,eAAe,EAAE;MAAEnB,QAAQ,EAAE;IAAa,CAAC,CAAC;IACjEoB,UAAU,CAAC,MAAM;MACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMI,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC3C,KAAK,IAAIA,KAAK,CAAC4C,MAAM,GAAG,CAAC,EAAE;MAC9BvD,KAAK,CAACuB,KAAK,CAAC,iCAAiC,EAAE;QAAEE,QAAQ,EAAE;MAAa,CAAC,CAAC;MAC1E;IACF;IACAV,QAAQ,CAAC,yBAAyB,EAAE;MAAEyC,KAAK,EAAE;QAAEC,UAAU,EAAE5C;MAAW;IAAE,CAAC,CAAC;EAC5E,CAAC;EAED,MAAM6C,aAAa,GAAI1B,IAAI,IAAK;IAC9BD,UAAU,CAACC,IAAI,EAAEA,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAM0B,aAAa,GAAI3B,IAAI,IAAK;IAC9B,IAAIA,IAAI,CAACC,QAAQ,GAAG,CAAC,EAAE;MACrBF,UAAU,CAACC,IAAI,EAAEA,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IACrC,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC;EAED,oBACE/B,OAAA;IAAK0D,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEV,CAAC;AAAC5D,EAAA,CAtIID,UAAU;EAAA,QAKGJ,WAAW;AAAA;AAAAkE,EAAA,GALxB9D,UAAU;AAwIhB,eAAeA,UAAU;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}